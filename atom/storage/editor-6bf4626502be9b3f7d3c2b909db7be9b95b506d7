{"version":1,"windowDimensions":{"x":0,"y":23,"width":1352,"height":1027,"maximized":false},"grammars":{"grammarOverridesByPath":{}},"project":{"deserializer":"Project","paths":["/Users/hectorhuertas/turing/1module/projects/headcount_test_harness"],"buffers":[{"text":"require \"minitest\"\nrequire \"minitest/autorun\"\nrequire_relative \"../../headcount/lib/district_repository\"\nrequire_relative \"../../headcount/lib/district\"\nrequire_relative \"../../headcount/lib/enrollment\"\nrequire_relative \"../../headcount/lib/headcount_analyst\"\nrequire_relative \"../../headcount/lib/statewide_test\"\n\nclass IterationTwoTest < Minitest::Test\n  def test_statewide_testing_repository_basics\n    str = statewide_repo\n    assert str.find_by_name(\"ACADEMY 20\")\n    assert str.find_by_name(\"GUNNISON WATERSHED RE1J\")\n  end\n\n  def test_basic_proficiency_by_grade\n    str = statewide_repo\n    expected = { 2008 => {:math => 0.857, :reading => 0.866, :writing => 0.671},\n                 2009 => {:math => 0.824, :reading => 0.862, :writing => 0.706},\n                 2010 => {:math => 0.849, :reading => 0.864, :writing => 0.662},\n                 2011 => {:math => 0.819, :reading => 0.867, :writing => 0.678},\n                 2012 => {:math => 0.830, :reading => 0.870, :writing => 0.655},\n                 2013 => {:math => 0.855, :reading => 0.859, :writing => 0.668},\n                 2014 => {:math => 0.834, :reading => 0.831, :writing => 0.639}\n               }\n\n    testing = str.find_by_name(\"ACADEMY 20\")\n    assert_equal expected, testing.proficient_by_grade(3)\n  end\n\n  def test_basic_proficiency_by_race\n    str = statewide_repo\n    testing = str.find_by_name(\"ACADEMY 20\")\n    expected = { 2011 => {math: 0.816, reading: 0.897, writing: 0.826},\n                 2012 => {math: 0.818, reading: 0.893, writing: 0.808},\n                 2013 => {math: 0.805, reading: 0.901, writing: 0.810},\n                 2014 => {math: 0.800, reading: 0.855, writing: 0.789},\n               }\n    assert_equal expected, testing.proficient_by_race_or_ethnicity(:asian)\n\n    expected = {2011=>{:math=>0.451, :reading=>0.688, :writing=>0.503},\n                2012=>{:math=>0.467, :reading=>0.75, :writing=>0.528},\n                2013=>{:math=>0.473, :reading=>0.738, :writing=>0.531},\n                2014=>{:math=>0.418, :reading=>0.006, :writing=>0.453}}\n\n    testing = str.find_by_name(\"WOODLAND PARK RE-2\")\n\n    assert_equal expected, testing.proficient_by_race_or_ethnicity(:hispanic)\n\n    testing = str.find_by_name(\"PAWNEE RE-12\")\n    expected = {2011=>{:math=>0.581, :reading=>0.792, :writing=>0.698},\n                2012=>{:math=>0.452, :reading=>0.773, :writing=>0.622},\n                2013=>{:math=>0.469, :reading=>0.714, :writing=>0.51},\n                2014=>{:math=>0.468, :reading=>0.006, :writing=>0.488}}\n    assert_equal expected, testing.proficient_by_race_or_ethnicity(:white)\n  end\n\n  def test_proficiency_by_subject_and_year\n    str = statewide_repo\n\n    testing = str.find_by_name(\"ACADEMY 20\")\n    assert_equal 0.653, testing.proficient_for_subject_by_grade_in_year(:math, 8, 2011)\n\n    testing = str.find_by_name(\"WRAY SCHOOL DISTRICT RD-2\")\n    assert_equal 0.89, testing.proficient_for_subject_by_grade_in_year(:reading, 3, 2014)\n\n    testing = str.find_by_name(\"PLATEAU VALLEY 50\")\n    assert_equal \"N/A\", testing.proficient_for_subject_by_grade_in_year(:reading, 8, 2011)\n  end\n\n  def test_proficiency_by_subject_race_and_year\n    str = statewide_repo\n\n    testing = str.find_by_name(\"AULT-HIGHLAND RE-9\")\n    assert_equal 0.611, testing.proficient_for_subject_by_race_in_year(:math, :white, 2012)\n    assert_equal 0.310, testing.proficient_for_subject_by_race_in_year(:math, :hispanic, 2014)\n    assert_equal 0.794, testing.proficient_for_subject_by_race_in_year(:reading, :white, 2013)\n    assert_equal 0.278, testing.proficient_for_subject_by_race_in_year(:writing, :hispanic, 2014)\n\n    testing = str.find_by_name(\"BUFFALO RE-4\")\n    assert_equal 0.65, testing.proficient_for_subject_by_race_in_year(:math, :white, 2012)\n    assert_equal 0.437, testing.proficient_for_subject_by_race_in_year(:math, :hispanic, 2014)\n    assert_equal 0.76, testing.proficient_for_subject_by_race_in_year(:reading, :white, 2013)\n    assert_equal 0.375, testing.proficient_for_subject_by_race_in_year(:writing, :hispanic, 2014)\n  end\n\n  def test_unknown_data_errors\n    str = statewide_repo\n    testing = str.find_by_name(\"AULT-HIGHLAND RE-9\")\n\n    assert_raises(UnknownDataError) do\n      testing.proficient_by_grade(1)\n    end\n\n    assert_raises(UnknownDataError) do\n      testing.proficient_for_subject_by_grade_in_year(:pizza, 8, 2011)\n    end\n\n    assert_raises(UnknownDataError) do\n      testing.proficient_for_subject_by_race_in_year(:reading, :pizza, 2013)\n    end\n\n    assert_raises(UnknownDataError) do\n      testing.proficient_for_subject_by_race_in_year(:pizza, :white, 2013)\n    end\n  end\n\n  def test_statewide_testing_relationships\n    dr = district_repo\n    district = dr.find_by_name(\"ACADEMY 20\")\n    statewide_test = district.statewide_test\n    assert statewide_test.is_a?(StatewideTest)\n\n    ha = HeadcountAnalyst.new(dr)\n    # binding.pry\n    assert_equal \"WILEY RE-13 JT\", ha.top_statewide_test_year_over_year_growth(grade: 3, subject: :math).first\n    assert_in_delta 0.3, ha.top_statewide_test_year_over_year_growth(grade: 3, subject: :math).last, 0.005\n\n    assert_equal \"COTOPAXI RE-3\", ha.top_statewide_test_year_over_year_growth(grade: 8, subject: :reading).first\n    assert_in_delta 0.13, ha.top_statewide_test_year_over_year_growth(grade: 8, subject: :reading).last, 0.005\n\n    assert_equal \"BETHUNE R-5\", ha.top_statewide_test_year_over_year_growth(grade: 3, subject: :writing).first\n    assert_in_delta 0.148, ha.top_statewide_test_year_over_year_growth(grade: 3, subject: :writing).last, 0.005\n  end\n\n  def test_finding_top_overall_districts\n    dr = district_repo\n    ha = HeadcountAnalyst.new(dr)\n\n    assert_equal \"SANGRE DE CRISTO RE-22J\", ha.top_statewide_test_year_over_year_growth(grade: 3).first\n    assert_in_delta 0.071, ha.top_statewide_test_year_over_year_growth(grade: 3).last, 0.005\n\n    assert_equal \"OURAY R-1\", ha.top_statewide_test_year_over_year_growth(grade: 8).first\n    assert_equal 0.11, ha.top_statewide_test_year_over_year_growth(grade: 8).last, 0.005\n  end\n\n  def test_weighting_results_by_subject\n    dr = district_repo\n    ha = HeadcountAnalyst.new(dr)\n\n    top_performer = ha.top_statewide_test_year_over_year_growth(grade: 8, :weighting => {:math => 0.5, :reading => 0.5, :writing => 0.0})\n    assert_equal \"OURAY R-1\", top_performer.first\n    assert_in_delta 0.153, top_performer.last, 0.005\n  end\n\n  def test_insufficient_information_errors\n    dr = district_repo\n    ha = HeadcountAnalyst.new(dr)\n\n    assert_raises(InsufficientInformationError) do\n      ha.top_statewide_test_year_over_year_growth(subject: :math)\n    end\n  end\n\n  def district_repo\n    dr = DistrictRepository.new\n    dr.load_data({:enrollment => {\n                    :kindergarten => \"./data/Kindergartners in full-day program.csv\",\n                    :high_school_graduation => \"./data/High school graduation rates.csv\",\n                   },\n                   :statewide_testing => {\n                     :third_grade => \"./data/3rd grade students scoring proficient or above on the CSAP_TCAP.csv\",\n                     :eighth_grade => \"./data/8th grade students scoring proficient or above on the CSAP_TCAP.csv\",\n                     :math => \"./data/Average proficiency on the CSAP_TCAP by race_ethnicity_ Math.csv\",\n                     :reading => \"./data/Average proficiency on the CSAP_TCAP by race_ethnicity_ Reading.csv\",\n                     :writing => \"./data/Average proficiency on the CSAP_TCAP by race_ethnicity_ Writing.csv\"\n                   }\n                 })\n    dr\n  end\n\n  def statewide_repo\n    str = StatewideTestRepository.new\n    str.load_data({\n                    :statewide_testing => {\n                      :third_grade => \"./data/3rd grade students scoring proficient or above on the CSAP_TCAP.csv\",\n                      :eighth_grade => \"./data/8th grade students scoring proficient or above on the CSAP_TCAP.csv\",\n                      :math => \"./data/Average proficiency on the CSAP_TCAP by race_ethnicity_ Math.csv\",\n                      :reading => \"./data/Average proficiency on the CSAP_TCAP by race_ethnicity_ Reading.csv\",\n                      :writing => \"./data/Average proficiency on the CSAP_TCAP by race_ethnicity_ Writing.csv\"\n                    }\n                  })\n    str\n  end\nend\n","markerStore":{"nextMarkerId":15,"markersById":{"0":{"range":{"start":{"row":113,"column":33},"end":{"row":113,"column":33}},"properties":{"type":"selection","editorId":12,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"12":{"range":{"start":{"row":114,"column":0},"end":{"row":115,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"13":{"range":{"start":{"row":113,"column":32},"end":{"row":113,"column":33}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"14":{"range":{"start":{"row":113,"column":29},"end":{"row":113,"column":30}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false}},"version":2},"history":{"version":3,"nextCheckpointId":19,"undoStack":[{"type":"group-start","snapshot":{"0":{"range":[[114,0],[114,0]],"properties":{"type":"selection","editorId":12,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[114,0],[114,0]],"newRange":[[114,0],[114,4]],"oldText":"","newText":"    "}},{"type":"group-end","snapshot":{"0":{"range":[[114,4],[114,4]],"properties":{"type":"selection","editorId":12,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[114,4],[114,4]],"properties":{"type":"selection","editorId":12,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[114,4],[114,4]],"newRange":[[114,4],[114,5]],"oldText":"","newText":"b"}},{"type":"change","content":{"oldRange":[[114,5],[114,5]],"newRange":[[114,5],[114,6]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[114,6],[114,6]],"newRange":[[114,6],[114,7]],"oldText":"","newText":"n"}},{"type":"group-end","snapshot":{"0":{"range":[[114,7],[114,7]],"properties":{"type":"selection","editorId":12,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[114,7],[114,7]],"properties":{"type":"selection","editorId":12,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[114,7],[114,7]],"newRange":[[114,7],[114,8]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[114,8],[114,8]],"newRange":[[114,8],[114,9]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[114,9],[114,9]],"newRange":[[114,9],[114,10]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[114,10],[114,10]],"newRange":[[114,10],[114,11]],"oldText":"","newText":"g"}},{"type":"change","content":{"oldRange":[[114,11],[114,11]],"newRange":[[114,11],[114,12]],"oldText":"","newText":"."}},{"type":"group-end","snapshot":{"0":{"range":[[114,12],[114,12]],"properties":{"type":"selection","editorId":12,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[114,12],[114,12]],"properties":{"type":"selection","editorId":12,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[114,12],[114,12]],"newRange":[[114,12],[114,13]],"oldText":"","newText":"p"}},{"type":"change","content":{"oldRange":[[114,13],[114,13]],"newRange":[[114,13],[114,14]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[114,14],[114,14]],"newRange":[[114,14],[114,15]],"oldText":"","newText":"y"}},{"type":"group-end","snapshot":{"0":{"range":[[114,15],[114,15]],"properties":{"type":"selection","editorId":12,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[114,15],[114,15]],"properties":{"type":"selection","editorId":12,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[114,4],[114,4]],"newRange":[[114,4],[114,6]],"oldText":"","newText":"# "}},{"type":"group-end","snapshot":{"0":{"range":[[114,17],[114,17]],"properties":{"type":"selection","editorId":12,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}}],"redoStack":[]},"encoding":"utf8","filePath":"/Users/hectorhuertas/turing/1module/projects/headcount_test_harness/test/iteration_two_test.rb","digestWhenLastPersisted":"118ae21689a17faf2ac54355b4cef7963f3b9905","preferredLineEnding":null,"deserializer":"TextBuffer","version":2},{"text":"require \"minitest\"\nrequire \"minitest/autorun\"\nrequire_relative \"../../headcount/lib/district_repository\"\nrequire_relative \"../../headcount/lib/district\"\nrequire_relative \"../../headcount/lib/enrollment\"\nrequire_relative \"../../headcount/lib/headcount_analyst\"\n\nclass IterationZeroTest < Minitest::Test\n  def test_district_basics\n    d = District.new({:name => \"ACADEMY 20\"})\n    assert_equal \"ACADEMY 20\", d.name\n  end\n\n  def test_loading_and_finding_districts\n    dr = DistrictRepository.new\n    dr.load_data({\n                   :enrollment => {\n                     :kindergarten => \"./data/Kindergartners in full-day program.csv\"\n                   }\n                 })\n    district = dr.find_by_name(\"ACADEMY 20\")\n\n    assert_equal \"ACADEMY 20\", district.name\n\n    assert_equal 7, dr.find_all_matching(\"WE\").count\n  end\n\n  def test_enrollment_basics\n    e = Enrollment.new({:name => \"ACADEMY 20\", :kindergarten_participation => {2010 => 0.3915, 2011 => 0.35356, 2012 => 0.2677}})\n    all_years = {2010 => 0.3915, 2011 => 0.35356, 2012 => 0.2677}\n    assert_in_delta 0.391, e.kindergarten_participation_in_year(2010), 0.005\n    assert_in_delta 0.267, e.kindergarten_participation_in_year(2012), 0.005\n\n    truncated = all_years.map { |year, rate| [year, rate.to_s[0..4].to_f]}.to_h\n    truncated.each do |k,v|\n      assert_in_delta v, e.kindergarten_participation_by_year[k], 0.005\n    end\n  end\n\n  def test_loading_and_finding_enrollments\n    er = EnrollmentRepository.new\n    er.load_data({\n                   :enrollment => {\n                     :kindergarten => \"./data/Kindergartners in full-day program.csv\"\n                   }\n                 })\n\n    name = \"GUNNISON WATERSHED RE1J\"\n    enrollment = er.find_by_name(name)\n    assert_equal name, enrollment.name\n    assert enrollment.is_a?(Enrollment)\n    assert_in_delta 0.144, enrollment.kindergarten_participation_in_year(2004), 0.005\n  end\n\n  def test_district_enrollment_relationship_basics\n    dr = DistrictRepository.new\n    dr.load_data({:enrollment => {:kindergarten => \"./data/Kindergartners in full-day program.csv\"}})\n    district = dr.find_by_name(\"GUNNISON WATERSHED RE1J\")\n\n    assert_in_delta 0.144, district.enrollment.kindergarten_participation_in_year(2004), 0.005\n  end\n\n  def test_enrollment_analysis_basics\n    dr = DistrictRepository.new\n    dr.load_data({:enrollment => {:kindergarten => \"./data/Kindergartners in full-day program.csv\"}})\n    ha = HeadcountAnalyst.new(dr)\n    assert_in_delta 1.126, ha.kindergarten_participation_rate_variation(\"GUNNISON WATERSHED RE1J\", :against => \"TELLURIDE R-1\"), 0.005\n    assert_in_delta 0.447, ha.kindergarten_participation_rate_variation('ACADEMY 20', :against => 'YUMA SCHOOL DISTRICT 1'), 0.005\n  end\nend\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":16},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/hectorhuertas/turing/1module/projects/headcount_test_harness/test/iteration_zero_test.rb","digestWhenLastPersisted":"d8724836358ab1a43242e72d81903dc06a02b0a2","preferredLineEnding":null,"deserializer":"TextBuffer","version":2},{"text":"# require \"minitest\"\n# require \"minitest/autorun\"\n# require_relative \"../../headcount/lib/district_repository\"\n# require_relative \"../../headcount/lib/headcount_analyst\"\n# require_relative \"../../headcount/lib/economic_profile_repository\"\n# require_relative \"../../headcount/lib/economic_profile\"\n#\n# class IterationThreeTest < Minitest::Test\n#   def test_economic_profile_basics\n#     data = {:median_household_income => {[2014, 2015] => 50000, [2013, 2014] => 60000},\n#             :children_in_poverty => {2012 => 0.1845},\n#             :free_or_reduced_price_lunch => {2014 => {:percentage => 0.023, :total => 100}},\n#             :title_i => {2015 => 0.543},\n#            }\n#     ep = EconomicProfile.new(data)\n#     assert_equal 50000, ep.estimated_median_household_income_in_year(2015)\n#     assert_equal 55000, ep.median_household_income_average\n#     assert_in_delta 0.184, ep.children_in_poverty_in_year(2012), 0.005\n#     assert_in_delta 0.023, ep.free_or_reduced_price_lunch_percentage_in_year(2014), 0.005\n#     assert_equal 100, ep.free_or_reduced_price_lunch_number_in_year(2014)\n#     assert_in_delta 0.543, ep.title_i_in_year(2015), 0.005\n#   end\n#\n#   def test_loading_econ_profile_data\n#     epr = EconomicProfileRepository.new\n#     epr.load_data({\n#                     :economic_profile => {\n#                       :median_household_income => \"./data/Median household income.csv\",\n#                       :children_in_poverty => \"./data/School-aged children in poverty.csv\",\n#                       :free_or_reduced_price_lunch => \"./data/Students qualifying for free or reduced price lunch.csv\",\n#                       :title_i => \"./data/Title I students.csv\"\n#                     }\n#                   })\n#     [\"ACADEMY 20\",\"WIDEFIELD 3\",\"ROARING FORK RE-1\",\"MOFFAT 2\",\"ST VRAIN VALLEY RE 1J\"].each do |dname|\n#       assert epr.find_by_name(dname).is_a?(EconomicProfile)\n#     end\n#   end\n#\n#   def district_repo\n#     dr = DistrictRepository.new\n#     dr.load_data({:enrollment => {\n#                     :kindergarten => \"./data/Kindergartners in full-day program.csv\",\n#                     :high_school_graduation => \"./data/High school graduation rates.csv\",\n#                    },\n#                    :statewide_testing => {\n#                      :third_grade => \"./data/3rd grade students scoring proficient or above on the CSAP_TCAP.csv\",\n#                      :eighth_grade => \"./data/8th grade students scoring proficient or above on the CSAP_TCAP.csv\",\n#                      :math => \"./data/Average proficiency on the CSAP_TCAP by race_ethnicity_ Math.csv\",\n#                      :reading => \"./data/Average proficiency on the CSAP_TCAP by race_ethnicity_ Reading.csv\",\n#                      :writing => \"./data/Average proficiency on the CSAP_TCAP by race_ethnicity_ Writing.csv\"\n#                    }\n#                  })\n#     dr\n#   end\n# end\n","markerStore":{"nextMarkerId":3,"markersById":{"0":{"range":{"start":{"row":24,"column":26},"end":{"row":24,"column":26}},"properties":{"type":"selection","editorId":20,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"2":{"range":{"start":{"row":0,"column":0},"end":{"row":55,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false}},"version":2},"history":{"version":3,"nextCheckpointId":4,"undoStack":[{"type":"group-start","snapshot":{"0":{"range":[[0,0],[55,0]],"properties":{"type":"selection","editorId":20,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[0,0],[0,0]],"newRange":[[0,0],[0,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[1,0],[1,0]],"newRange":[[1,0],[1,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[2,0],[2,0]],"newRange":[[2,0],[2,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[3,0],[3,0]],"newRange":[[3,0],[3,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[4,0],[4,0]],"newRange":[[4,0],[4,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[5,0],[5,0]],"newRange":[[5,0],[5,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[6,0],[6,0]],"newRange":[[6,0],[6,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[7,0],[7,0]],"newRange":[[7,0],[7,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[8,0],[8,0]],"newRange":[[8,0],[8,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[9,0],[9,0]],"newRange":[[9,0],[9,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[10,0],[10,0]],"newRange":[[10,0],[10,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[11,0],[11,0]],"newRange":[[11,0],[11,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[12,0],[12,0]],"newRange":[[12,0],[12,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[13,0],[13,0]],"newRange":[[13,0],[13,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[14,0],[14,0]],"newRange":[[14,0],[14,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[15,0],[15,0]],"newRange":[[15,0],[15,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[16,0],[16,0]],"newRange":[[16,0],[16,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[17,0],[17,0]],"newRange":[[17,0],[17,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[18,0],[18,0]],"newRange":[[18,0],[18,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[19,0],[19,0]],"newRange":[[19,0],[19,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[20,0],[20,0]],"newRange":[[20,0],[20,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[21,0],[21,0]],"newRange":[[21,0],[21,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[22,0],[22,0]],"newRange":[[22,0],[22,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[23,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[24,0],[24,0]],"newRange":[[24,0],[24,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[25,0],[25,0]],"newRange":[[25,0],[25,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[26,0],[26,0]],"newRange":[[26,0],[26,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[27,0],[27,0]],"newRange":[[27,0],[27,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[28,0],[28,0]],"newRange":[[28,0],[28,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[29,0],[29,0]],"newRange":[[29,0],[29,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[30,0],[30,0]],"newRange":[[30,0],[30,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[31,0],[31,0]],"newRange":[[31,0],[31,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[32,0],[32,0]],"newRange":[[32,0],[32,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[33,0],[33,0]],"newRange":[[33,0],[33,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[34,0],[34,0]],"newRange":[[34,0],[34,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[35,0],[35,0]],"newRange":[[35,0],[35,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[36,0],[36,0]],"newRange":[[36,0],[36,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[37,0],[37,0]],"newRange":[[37,0],[37,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[38,0],[38,0]],"newRange":[[38,0],[38,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[39,0],[39,0]],"newRange":[[39,0],[39,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[40,0],[40,0]],"newRange":[[40,0],[40,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[41,0],[41,0]],"newRange":[[41,0],[41,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[42,0],[42,0]],"newRange":[[42,0],[42,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[43,0],[43,0]],"newRange":[[43,0],[43,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[44,0],[44,0]],"newRange":[[44,0],[44,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[45,0],[45,0]],"newRange":[[45,0],[45,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[46,0],[46,0]],"newRange":[[46,0],[46,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[47,0],[47,0]],"newRange":[[47,0],[47,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[48,0],[48,0]],"newRange":[[48,0],[48,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[49,0],[49,0]],"newRange":[[49,0],[49,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[50,0],[50,0]],"newRange":[[50,0],[50,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[51,0],[51,0]],"newRange":[[51,0],[51,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[52,0],[52,0]],"newRange":[[52,0],[52,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[53,0],[53,0]],"newRange":[[53,0],[53,2]],"oldText":"","newText":"# "}},{"type":"change","content":{"oldRange":[[54,0],[54,0]],"newRange":[[54,0],[54,2]],"oldText":"","newText":"# "}},{"type":"group-end","snapshot":{"0":{"range":[[0,0],[55,0]],"properties":{"type":"selection","editorId":20,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[24,26],[24,26]],"properties":{"type":"selection","editorId":20,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[37,1],[37,2]],"newRange":[[37,1],[37,1]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[22,1],[22,2]],"newRange":[[22,1],[22,1]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[6,1],[6,2]],"newRange":[[6,1],[6,1]],"oldText":" ","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[24,26],[24,26]],"properties":{"type":"selection","editorId":20,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}}],"redoStack":[]},"encoding":"utf8","filePath":"/Users/hectorhuertas/turing/1module/projects/headcount_test_harness/test/iteration_three_test.rb","digestWhenLastPersisted":"bb8d1ffac5737d105311849171e2391e537b0aa6","preferredLineEnding":null,"deserializer":"TextBuffer","version":2}]},"workspace":{"deserializer":"Workspace","paneContainer":{"deserializer":"PaneContainer","version":1,"root":{"deserializer":"Pane","id":3,"items":[{"deserializer":"TextEditor","id":12,"softTabs":true,"scrollRow":84,"displayBuffer":{"deserializer":"DisplayBuffer","id":13,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/hectorhuertas/turing/1module/projects/headcount_test_harness/test/iteration_two_test.rb","largeFileMode":false},"largeFileMode":false}},{"deserializer":"TextEditor","id":16,"softTabs":true,"displayBuffer":{"deserializer":"DisplayBuffer","id":17,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/hectorhuertas/turing/1module/projects/headcount_test_harness/test/iteration_zero_test.rb","largeFileMode":false},"largeFileMode":false}},{"deserializer":"TextEditor","id":20,"softTabs":true,"scrollRow":12,"displayBuffer":{"deserializer":"DisplayBuffer","id":21,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/hectorhuertas/turing/1module/projects/headcount_test_harness/test/iteration_three_test.rb","largeFileMode":false},"largeFileMode":false}}],"activeItemURI":"/Users/hectorhuertas/turing/1module/projects/headcount_test_harness/test/iteration_three_test.rb","focused":false,"flexScale":1},"activePaneId":3},"packagesWithActiveGrammars":["language-ruby","language-hyperlink","language-todo"],"destroyedItemURIs":["/Users/hectorhuertas/turing/1module/projects/headcount_test_harness/test/iteration_one_test.rb"]},"packageStates":{"fuzzy-finder":{"/Users/hectorhuertas/turing/1module/projects/headcount_test_harness/test/iteration_two_test.rb":1447903573181,"/Users/hectorhuertas/turing/1module/projects/headcount_test_harness/test/iteration_zero_test.rb":1447910036066,"/Users/hectorhuertas/turing/1module/projects/headcount_test_harness/test/iteration_three_test.rb":1447910036849},"metrics":{"sessionLength":46723535},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/Users/hectorhuertas/turing/1module/projects/headcount_test_harness":{"isExpanded":true,"entries":{"data":{"isExpanded":false,"entries":{}},"test":{"isExpanded":true,"entries":{}}}}},"selectedPath":"/Users/hectorhuertas/turing/1module/projects/headcount_test_harness/test/iteration_three_test.rb","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200},"keybinding-resolver":{}},"fullScreen":false}