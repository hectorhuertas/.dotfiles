{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":23,"width":1451,"height":1027,"maximized":false},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"deserializer":"Project","paths":["/Users/hectorhuertas/turing/1module/projects/http_yeah_you_know_me"],"buffers":[{"text":"require_relative 'html_generator'\nrequire_relative 'header_generator'\nrequire_relative 'request_parser'\nrequire_relative 'responses'\nrequire_relative 'game'\n\nclass App\n  def initialize\n    @html_generator = HtmlGenerator.new\n    @responses = Responses.new\n    @header_generator = HeaderGenerator.new\n  end\n\n  def generate_response(i, request)\n    @status_code = '200 OK'\n    @parser = RequestParser.new(request)\n\n    if @parser.verb == 'GET'\n      response = get_responses(i)\n    else\n      response = post_responses\n    end\n\n    @html_generator.generate(response, @parser.diagnostics)\n  end\n\n  def post_responses\n    case @parser.path\n    when '/start_game' then start_or_refuse_new_game\n    when '/game'       then check_for_current_game\n    end\n  end\n\n  def check_for_current_game\n    if @game\n      store_guess_and_redirect\n    else\n      no_game_started\n    end\n  end\n\n  def start_or_refuse_new_game\n    if @game\n      refuse_new_game_start\n    else\n      start_new_game_and_redirect\n    end\n  end\n\n  def store_guess_and_redirect\n    @game.store_guess(@parser.guess)\n    @status_code = '301 MOVED PERMANENTLY'\n    @responses.root\n  end\n\n  def refuse_new_game_start\n    @status_code = '403 FORBIDDEN'\n    @responses.game_in_progress\n  end\n\n  def no_game_started\n    @status_code = '403 FORBIDDEN'\n    @responses.no_game_started\n  end\n\n  def start_new_game_and_redirect\n    @game = Game.new\n    @status_code = '301 MOVED PERMANENTLY'\n    @responses.good_luck\n  end\n\n  def get_responses(i)\n    case @parser.path\n    when '/'            then @responses.root\n    when '/hello'       then @responses.hello_world(i)\n    when '/datetime'    then @responses.datetime\n    when '/shutdown'    then @responses.shutdown(i)\n    when '/word_search' then check_for_json_request\n    when '/game'        then get_game_status_for_current_game\n    when '/force_error' then force_error_status_and_response\n    else                     @status_code = '404 NOT FOUND'\n    end\n  end\n\n  def get_game_status_for_current_game\n    if @game\n      @responses.game(@parser.word, @game)\n    else\n      no_game_started\n    end\n  end\n\n  def check_for_json_request\n    if @parser.accept.start_with?('application/json')\n      @responses.word_suggest(@parser.word)\n    else\n      @responses.word_search(@parser.word)\n    end\n  end\n\n  def force_error_status_and_response\n    @status_code = '500 INTERNAL SERVER ERROR'\n    @responses.system_error\n  end\n\n  def generate_headers(length)\n    @header_generator.headers(length, @status_code)\n  end\nend\n","markerStore":{"nextMarkerId":24,"markersById":{"0":{"range":{"start":{"row":8,"column":4},"end":{"row":8,"column":19}},"properties":{"type":"selection","editorId":332,"goalScreenRange":null,"autoscroll":false},"reversed":true,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":3,"nextCheckpointId":14,"undoStack":[{"type":"group-start","snapshot":{"0":{"range":[[66,20],[67,36]],"properties":{"type":"selection","editorId":332,"goalScreenRange":null,"autoscroll":false},"reversed":true,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[0,0],[0,0]],"newRange":[[0,0],[2,0]],"oldText":"","newText":"require 'pry'\nrequire '../complete_me/lib/complete_me'\n"}},{"type":"change","content":{"oldRange":[[2,0],[7,0]],"newRange":[[2,0],[2,0]],"oldText":"require_relative 'html_generator'\nrequire_relative 'header_generator'\nrequire_relative 'request_parser'\nrequire_relative 'responses'\nrequire_relative 'game'\n","newText":""}},{"type":"change","content":{"oldRange":[[5,0],[5,0]],"newRange":[[5,0],[8,0]],"oldText":"","newText":"    @complete_me = CompleteMe.new\n    dictionary = ['pizza']\n    @complete_me.populate(dictionary)\n"}},{"type":"change","content":{"oldRange":[[8,0],[11,0]],"newRange":[[8,0],[8,0]],"oldText":"    @html_generator = HtmlGenerator.new\n    @responses = Responses.new\n    @header_generator = HeaderGenerator.new\n","newText":""}},{"type":"change","content":{"oldRange":[[10,0],[10,0]],"newRange":[[10,0],[13,0]],"oldText":"","newText":"  def hello_world(i)\n    \"Hello, World (#{i})\"\n  end\n"}},{"type":"change","content":{"oldRange":[[13,0],[16,0]],"newRange":[[13,0],[13,0]],"oldText":"  def generate_response(i, request)\n    @status_code = '200 OK'\n    @parser = RequestParser.new(request)\n","newText":""}},{"type":"change","content":{"oldRange":[[14,0],[14,0]],"newRange":[[14,0],[20,0]],"oldText":"","newText":"  def convert_request_to_html(request)\n    data = [\"Verb: #{verb(request)}\", \"Path: #{path(request)}\",\n            \"Protocol: #{protocol(request)}\", \"Host: #{host(request)}\",\n            \"Port: #{port(request)}\", \"Origin: #{host(request)}\", \"#{accept(request)}\"]\n    create_html_string(data)\n  end\n"}},{"type":"change","content":{"oldRange":[[20,0],[25,0]],"newRange":[[20,0],[20,0]],"oldText":"    if @parser.verb == 'GET'\n      response = get_responses(i)\n    else\n      response = post_responses\n    end\n","newText":""}},{"type":"change","content":{"oldRange":[[21,0],[21,0]],"newRange":[[21,0],[23,0]],"oldText":"","newText":"  def create_html_string(data)\n    \"<pre>\\n#{data.join(\"\\n\")}\\n</pre>\"\n"}},{"type":"change","content":{"oldRange":[[23,0],[24,0]],"newRange":[[23,0],[23,0]],"oldText":"    @html_generator.generate(response, @parser.diagnostics)\n","newText":""}},{"type":"change","content":{"oldRange":[[25,0],[25,0]],"newRange":[[25,0],[31,0]],"oldText":"","newText":"  def generate_response(i, request)\n    # binding.pry\n    if verb(request) == 'GET'\n      get_responses(i, request)\n    else\n      post_responses(i, request)\n"}},{"type":"change","content":{"oldRange":[[31,0],[35,0]],"newRange":[[31,0],[31,0]],"oldText":"  def post_responses\n    case @parser.path\n    when '/start_game' then start_or_refuse_new_game\n    when '/game'       then check_for_current_game\n","newText":""}},{"type":"change","content":{"oldRange":[[34,0],[34,0]],"newRange":[[34,0],[38,0]],"oldText":"","newText":"  def post_responses(i, request)\n    case path(request)\n    when '/start_game'\n      \"Good luck!\" + \"\\n\" + convert_request_to_html(request)\n"}},{"type":"change","content":{"oldRange":[[38,0],[43,0]],"newRange":[[38,0],[38,0]],"oldText":"  def check_for_current_game\n    if @game\n      store_guess_and_redirect\n    else\n      no_game_started\n","newText":""}},{"type":"change","content":{"oldRange":[[41,0],[41,0]],"newRange":[[41,0],[53,0]],"oldText":"","newText":"  def get_responses(i, request)\n    case path(request)\n    when '/'\n      convert_request_to_html(request)\n    when '/hello'\n      hello_world(i) + \"\\n\" + convert_request_to_html(request)\n    when '/datetime'\n      datetime + \"\\n\" + convert_request_to_html(request)\n    when '/shutdown'\n      \"Total Requests: #{i}\" + \"\\n\" + convert_request_to_html(request)\n    when '/word_search'\n      word_response(word(request)) + \"\\n\" + convert_request_to_html(request)\n"}},{"type":"change","content":{"oldRange":[[53,0],[58,0]],"newRange":[[53,0],[53,0]],"oldText":"  def start_or_refuse_new_game\n    if @game\n      refuse_new_game_start\n    else\n      start_new_game_and_redirect\n","newText":""}},{"type":"change","content":{"oldRange":[[56,0],[56,0]],"newRange":[[56,0],[59,0]],"oldText":"","newText":"  def datetime\n    # 11:07AM on Sunday, November 1, 2015\n    Time.now.strftime('%l:%M%p on %A, %B %e, %Y')\n"}},{"type":"change","content":{"oldRange":[[59,0],[63,0]],"newRange":[[59,0],[59,0]],"oldText":"  def store_guess_and_redirect\n    @game.store_guess(@parser.guess)\n    @status_code = '301 MOVED PERMANENTLY'\n    @responses.root\n","newText":""}},{"type":"change","content":{"oldRange":[[61,0],[61,0]],"newRange":[[61,0],[67,0]],"oldText":"","newText":"  def word_response(word)\n    if word?(word)\n      \"#{word} is a known word\"\n    else\n      \"#{word} is not a known word\"\n    end\n"}},{"type":"change","content":{"oldRange":[[67,0],[70,0]],"newRange":[[67,0],[67,0]],"oldText":"  def refuse_new_game_start\n    @status_code = '403 FORBIDDEN'\n    @responses.game_in_progress\n","newText":""}},{"type":"change","content":{"oldRange":[[69,0],[69,0]],"newRange":[[69,0],[71,0]],"oldText":"","newText":"  def verb(request)\n    request.first.split[0]\n"}},{"type":"change","content":{"oldRange":[[71,0],[74,0]],"newRange":[[71,0],[71,0]],"oldText":"  def no_game_started\n    @status_code = '403 FORBIDDEN'\n    @responses.no_game_started\n","newText":""}},{"type":"change","content":{"oldRange":[[73,0],[73,0]],"newRange":[[73,0],[75,0]],"oldText":"","newText":"  def path(request)\n    request.first.split[1].split(\"?\")[0]\n"}},{"type":"change","content":{"oldRange":[[75,0],[79,0]],"newRange":[[75,0],[75,0]],"oldText":"  def start_new_game_and_redirect\n    @game = Game.new\n    @status_code = '301 MOVED PERMANENTLY'\n    @responses.good_luck\n","newText":""}},{"type":"change","content":{"oldRange":[[77,0],[77,0]],"newRange":[[77,0],[79,0]],"oldText":"","newText":"  def word(request)\n    request.first.split[1].split(\"?\")[1].split(\"=\")[1]\n"}},{"type":"change","content":{"oldRange":[[79,0],[90,0]],"newRange":[[79,0],[79,0]],"oldText":"  def get_responses(i)\n    case @parser.path\n    when '/'            then @responses.root\n    when '/hello'       then @responses.hello_world(i)\n    when '/datetime'    then @responses.datetime\n    when '/shutdown'    then @responses.shutdown(i)\n    when '/word_search' then check_for_json_request\n    when '/game'        then get_game_status_for_current_game\n    when '/force_error' then force_error_status_and_response\n    else                     @status_code = '404 NOT FOUND'\n    end\n","newText":""}},{"type":"change","content":{"oldRange":[[81,0],[81,0]],"newRange":[[81,0],[86,0]],"oldText":"","newText":"  def word?(word)\n    begin\n      @complete_me.center.search(word).valid_word\n    rescue\n      false\n"}},{"type":"change","content":{"oldRange":[[86,0],[91,0]],"newRange":[[86,0],[86,0]],"oldText":"  def get_game_status_for_current_game\n    if @game\n      @responses.game(@parser.word, @game)\n    else\n      no_game_started\n","newText":""}},{"type":"change","content":{"oldRange":[[89,0],[89,0]],"newRange":[[89,0],[91,0]],"oldText":"","newText":"  def protocol(request)\n    request.first.split[2]\n"}},{"type":"change","content":{"oldRange":[[91,0],[97,0]],"newRange":[[91,0],[91,0]],"oldText":"  def check_for_json_request\n    if @parser.accept.start_with?('application/json')\n      @responses.word_suggest(@parser.word)\n    else\n      @responses.word_search(@parser.word)\n    end\n","newText":""}},{"type":"change","content":{"oldRange":[[93,0],[93,0]],"newRange":[[93,0],[95,0]],"oldText":"","newText":"  def host(request)\n    request[1].split[1].split(\":\")[0]\n"}},{"type":"change","content":{"oldRange":[[95,0],[98,0]],"newRange":[[95,0],[95,0]],"oldText":"  def force_error_status_and_response\n    @status_code = '500 INTERNAL SERVER ERROR'\n    @responses.system_error\n","newText":""}},{"type":"change","content":{"oldRange":[[97,0],[97,0]],"newRange":[[97,0],[99,0]],"oldText":"","newText":"  def port(request)\n    request[1].split[1].split(\":\")[1]\n"}},{"type":"change","content":{"oldRange":[[99,0],[101,0]],"newRange":[[99,0],[99,0]],"oldText":"  def generate_headers(length)\n    @header_generator.headers(length, @status_code)\n","newText":""}},{"type":"change","content":{"oldRange":[[100,0],[100,0]],"newRange":[[100,0],[104,0]],"oldText":"","newText":"\n  def accept(request)\n    request[4]\n  end\n"}},{"type":"group-end","snapshot":{"0":{"range":[[75,0],[75,0]],"properties":{"type":"selection","editorId":332,"goalScreenRange":null,"autoscroll":false},"reversed":true,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[47,20],[47,20]],"properties":{"type":"selection","editorId":332,"goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[0,0],[0,0]],"newRange":[[0,0],[5,0]],"oldText":"","newText":"require_relative 'html_generator'\nrequire_relative 'header_generator'\nrequire_relative 'request_parser'\nrequire_relative 'responses'\nrequire_relative 'game'\n"}},{"type":"change","content":{"oldRange":[[5,0],[7,0]],"newRange":[[5,0],[5,0]],"oldText":"require 'pry'\nrequire '../complete_me/lib/complete_me'\n","newText":""}},{"type":"change","content":{"oldRange":[[8,0],[8,0]],"newRange":[[8,0],[11,0]],"oldText":"","newText":"    @html_generator = HtmlGenerator.new\n    @responses = Responses.new\n    @header_generator = HeaderGenerator.new\n"}},{"type":"change","content":{"oldRange":[[11,0],[14,0]],"newRange":[[11,0],[11,0]],"oldText":"    @complete_me = CompleteMe.new\n    dictionary = ['pizza']\n    @complete_me.populate(dictionary)\n","newText":""}},{"type":"change","content":{"oldRange":[[13,0],[13,0]],"newRange":[[13,0],[16,0]],"oldText":"","newText":"  def generate_response(i, request)\n    @status_code = '200 OK'\n    @parser = RequestParser.new(request)\n"}},{"type":"change","content":{"oldRange":[[16,0],[19,0]],"newRange":[[16,0],[16,0]],"oldText":"  def hello_world(i)\n    \"Hello, World (#{i})\"\n  end\n","newText":""}},{"type":"change","content":{"oldRange":[[17,0],[17,0]],"newRange":[[17,0],[22,0]],"oldText":"","newText":"    if @parser.verb == 'GET'\n      response = get_responses(i)\n    else\n      response = post_responses\n    end\n"}},{"type":"change","content":{"oldRange":[[22,0],[28,0]],"newRange":[[22,0],[22,0]],"oldText":"  def convert_request_to_html(request)\n    data = [\"Verb: #{verb(request)}\", \"Path: #{path(request)}\",\n            \"Protocol: #{protocol(request)}\", \"Host: #{host(request)}\",\n            \"Port: #{port(request)}\", \"Origin: #{host(request)}\", \"#{accept(request)}\"]\n    create_html_string(data)\n  end\n","newText":""}},{"type":"change","content":{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[24,0]],"oldText":"","newText":"    @html_generator.generate(response, @parser.diagnostics)\n"}},{"type":"change","content":{"oldRange":[[24,0],[26,0]],"newRange":[[24,0],[24,0]],"oldText":"  def create_html_string(data)\n    \"<pre>\\n#{data.join(\"\\n\")}\\n</pre>\"\n","newText":""}},{"type":"change","content":{"oldRange":[[26,0],[26,0]],"newRange":[[26,0],[30,0]],"oldText":"","newText":"  def post_responses\n    case @parser.path\n    when '/start_game' then start_or_refuse_new_game\n    when '/game'       then check_for_current_game\n"}},{"type":"change","content":{"oldRange":[[30,0],[36,0]],"newRange":[[30,0],[30,0]],"oldText":"  def generate_response(i, request)\n    # binding.pry\n    if verb(request) == 'GET'\n      get_responses(i, request)\n    else\n      post_responses(i, request)\n","newText":""}},{"type":"change","content":{"oldRange":[[33,0],[33,0]],"newRange":[[33,0],[38,0]],"oldText":"","newText":"  def check_for_current_game\n    if @game\n      store_guess_and_redirect\n    else\n      no_game_started\n"}},{"type":"change","content":{"oldRange":[[38,0],[42,0]],"newRange":[[38,0],[38,0]],"oldText":"  def post_responses(i, request)\n    case path(request)\n    when '/start_game'\n      \"Good luck!\" + \"\\n\" + convert_request_to_html(request)\n","newText":""}},{"type":"change","content":{"oldRange":[[41,0],[41,0]],"newRange":[[41,0],[46,0]],"oldText":"","newText":"  def start_or_refuse_new_game\n    if @game\n      refuse_new_game_start\n    else\n      start_new_game_and_redirect\n"}},{"type":"change","content":{"oldRange":[[46,0],[58,0]],"newRange":[[46,0],[46,0]],"oldText":"  def get_responses(i, request)\n    case path(request)\n    when '/'\n      convert_request_to_html(request)\n    when '/hello'\n      hello_world(i) + \"\\n\" + convert_request_to_html(request)\n    when '/datetime'\n      datetime + \"\\n\" + convert_request_to_html(request)\n    when '/shutdown'\n      \"Total Requests: #{i}\" + \"\\n\" + convert_request_to_html(request)\n    when '/word_search'\n      word_response(word(request)) + \"\\n\" + convert_request_to_html(request)\n","newText":""}},{"type":"change","content":{"oldRange":[[49,0],[49,0]],"newRange":[[49,0],[53,0]],"oldText":"","newText":"  def store_guess_and_redirect\n    @game.store_guess(@parser.guess)\n    @status_code = '301 MOVED PERMANENTLY'\n    @responses.root\n"}},{"type":"change","content":{"oldRange":[[53,0],[56,0]],"newRange":[[53,0],[53,0]],"oldText":"  def datetime\n    # 11:07AM on Sunday, November 1, 2015\n    Time.now.strftime('%l:%M%p on %A, %B %e, %Y')\n","newText":""}},{"type":"change","content":{"oldRange":[[55,0],[55,0]],"newRange":[[55,0],[58,0]],"oldText":"","newText":"  def refuse_new_game_start\n    @status_code = '403 FORBIDDEN'\n    @responses.game_in_progress\n"}},{"type":"change","content":{"oldRange":[[58,0],[64,0]],"newRange":[[58,0],[58,0]],"oldText":"  def word_response(word)\n    if word?(word)\n      \"#{word} is a known word\"\n    else\n      \"#{word} is not a known word\"\n    end\n","newText":""}},{"type":"change","content":{"oldRange":[[60,0],[60,0]],"newRange":[[60,0],[63,0]],"oldText":"","newText":"  def no_game_started\n    @status_code = '403 FORBIDDEN'\n    @responses.no_game_started\n"}},{"type":"change","content":{"oldRange":[[63,0],[65,0]],"newRange":[[63,0],[63,0]],"oldText":"  def verb(request)\n    request.first.split[0]\n","newText":""}},{"type":"change","content":{"oldRange":[[65,0],[65,0]],"newRange":[[65,0],[69,0]],"oldText":"","newText":"  def start_new_game_and_redirect\n    @game = Game.new\n    @status_code = '301 MOVED PERMANENTLY'\n    @responses.good_luck\n"}},{"type":"change","content":{"oldRange":[[69,0],[71,0]],"newRange":[[69,0],[69,0]],"oldText":"  def path(request)\n    request.first.split[1].split(\"?\")[0]\n","newText":""}},{"type":"change","content":{"oldRange":[[71,0],[71,0]],"newRange":[[71,0],[82,0]],"oldText":"","newText":"  def get_responses(i)\n    case @parser.path\n    when '/'            then @responses.root\n    when '/hello'       then @responses.hello_world(i)\n    when '/datetime'    then @responses.datetime\n    when '/shutdown'    then @responses.shutdown(i)\n    when '/word_search' then check_for_json_request\n    when '/game'        then get_game_status_for_current_game\n    when '/force_error' then force_error_status_and_response\n    else                     @status_code = '404 NOT FOUND'\n    end\n"}},{"type":"change","content":{"oldRange":[[82,0],[84,0]],"newRange":[[82,0],[82,0]],"oldText":"  def word(request)\n    request.first.split[1].split(\"?\")[1].split(\"=\")[1]\n","newText":""}},{"type":"change","content":{"oldRange":[[84,0],[84,0]],"newRange":[[84,0],[89,0]],"oldText":"","newText":"  def get_game_status_for_current_game\n    if @game\n      @responses.game(@parser.word, @game)\n    else\n      no_game_started\n"}},{"type":"change","content":{"oldRange":[[89,0],[94,0]],"newRange":[[89,0],[89,0]],"oldText":"  def word?(word)\n    begin\n      @complete_me.center.search(word).valid_word\n    rescue\n      false\n","newText":""}},{"type":"change","content":{"oldRange":[[92,0],[92,0]],"newRange":[[92,0],[98,0]],"oldText":"","newText":"  def check_for_json_request\n    if @parser.accept.start_with?('application/json')\n      @responses.word_suggest(@parser.word)\n    else\n      @responses.word_search(@parser.word)\n    end\n"}},{"type":"change","content":{"oldRange":[[98,0],[100,0]],"newRange":[[98,0],[98,0]],"oldText":"  def protocol(request)\n    request.first.split[2]\n","newText":""}},{"type":"change","content":{"oldRange":[[100,0],[100,0]],"newRange":[[100,0],[103,0]],"oldText":"","newText":"  def force_error_status_and_response\n    @status_code = '500 INTERNAL SERVER ERROR'\n    @responses.system_error\n"}},{"type":"change","content":{"oldRange":[[103,0],[105,0]],"newRange":[[103,0],[103,0]],"oldText":"  def host(request)\n    request[1].split[1].split(\":\")[0]\n","newText":""}},{"type":"change","content":{"oldRange":[[105,0],[105,0]],"newRange":[[105,0],[107,0]],"oldText":"","newText":"  def generate_headers(length)\n    @header_generator.headers(length, @status_code)\n"}},{"type":"change","content":{"oldRange":[[107,0],[109,0]],"newRange":[[107,0],[107,0]],"oldText":"  def port(request)\n    request[1].split[1].split(\":\")[1]\n","newText":""}},{"type":"change","content":{"oldRange":[[108,0],[112,0]],"newRange":[[108,0],[108,0]],"oldText":"\n  def accept(request)\n    request[4]\n  end\n","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[46,0],[46,0]],"properties":{"type":"selection","editorId":332,"goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[47,5],[47,5]],"properties":{"type":"selection","editorId":332,"goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[0,0],[0,0]],"newRange":[[0,0],[2,0]],"oldText":"","newText":"require 'pry'\nrequire '../complete_me/lib/complete_me'\n"}},{"type":"change","content":{"oldRange":[[2,0],[7,0]],"newRange":[[2,0],[2,0]],"oldText":"require_relative 'html_generator'\nrequire_relative 'header_generator'\nrequire_relative 'request_parser'\nrequire_relative 'responses'\nrequire_relative 'game'\n","newText":""}},{"type":"change","content":{"oldRange":[[5,0],[5,0]],"newRange":[[5,0],[8,0]],"oldText":"","newText":"    @complete_me = CompleteMe.new\n    dictionary = ['pizza']\n    @complete_me.populate(dictionary)\n"}},{"type":"change","content":{"oldRange":[[8,0],[11,0]],"newRange":[[8,0],[8,0]],"oldText":"    @html_generator = HtmlGenerator.new\n    @responses = Responses.new\n    @header_generator = HeaderGenerator.new\n","newText":""}},{"type":"change","content":{"oldRange":[[10,0],[10,0]],"newRange":[[10,0],[13,0]],"oldText":"","newText":"  def hello_world(i)\n    \"Hello, World (#{i})\"\n  end\n"}},{"type":"change","content":{"oldRange":[[13,0],[16,0]],"newRange":[[13,0],[13,0]],"oldText":"  def generate_response(i, request)\n    @status_code = '200 OK'\n    @parser = RequestParser.new(request)\n","newText":""}},{"type":"change","content":{"oldRange":[[14,0],[14,0]],"newRange":[[14,0],[20,0]],"oldText":"","newText":"  def convert_request_to_html(request)\n    data = [\"Verb: #{verb(request)}\", \"Path: #{path(request)}\",\n            \"Protocol: #{protocol(request)}\", \"Host: #{host(request)}\",\n            \"Port: #{port(request)}\", \"Origin: #{host(request)}\", \"#{accept(request)}\"]\n    create_html_string(data)\n  end\n"}},{"type":"change","content":{"oldRange":[[20,0],[25,0]],"newRange":[[20,0],[20,0]],"oldText":"    if @parser.verb == 'GET'\n      response = get_responses(i)\n    else\n      response = post_responses\n    end\n","newText":""}},{"type":"change","content":{"oldRange":[[21,0],[21,0]],"newRange":[[21,0],[23,0]],"oldText":"","newText":"  def create_html_string(data)\n    \"<pre>\\n#{data.join(\"\\n\")}\\n</pre>\"\n"}},{"type":"change","content":{"oldRange":[[23,0],[24,0]],"newRange":[[23,0],[23,0]],"oldText":"    @html_generator.generate(response, @parser.diagnostics)\n","newText":""}},{"type":"change","content":{"oldRange":[[25,0],[25,0]],"newRange":[[25,0],[31,0]],"oldText":"","newText":"  def generate_response(i, request)\n    # binding.pry\n    if verb(request) == 'GET'\n      get_responses(i, request)\n    else\n      post_responses(i, request)\n"}},{"type":"change","content":{"oldRange":[[31,0],[35,0]],"newRange":[[31,0],[31,0]],"oldText":"  def post_responses\n    case @parser.path\n    when '/start_game' then start_or_refuse_new_game\n    when '/game'       then check_for_current_game\n","newText":""}},{"type":"change","content":{"oldRange":[[34,0],[34,0]],"newRange":[[34,0],[38,0]],"oldText":"","newText":"  def post_responses(i, request)\n    case path(request)\n    when '/start_game'\n      \"Good luck!\" + \"\\n\" + convert_request_to_html(request)\n"}},{"type":"change","content":{"oldRange":[[38,0],[43,0]],"newRange":[[38,0],[38,0]],"oldText":"  def check_for_current_game\n    if @game\n      store_guess_and_redirect\n    else\n      no_game_started\n","newText":""}},{"type":"change","content":{"oldRange":[[41,0],[41,0]],"newRange":[[41,0],[53,0]],"oldText":"","newText":"  def get_responses(i, request)\n    case path(request)\n    when '/'\n      convert_request_to_html(request)\n    when '/hello'\n      hello_world(i) + \"\\n\" + convert_request_to_html(request)\n    when '/datetime'\n      datetime + \"\\n\" + convert_request_to_html(request)\n    when '/shutdown'\n      \"Total Requests: #{i}\" + \"\\n\" + convert_request_to_html(request)\n    when '/word_search'\n      word_response(word(request)) + \"\\n\" + convert_request_to_html(request)\n"}},{"type":"change","content":{"oldRange":[[53,0],[58,0]],"newRange":[[53,0],[53,0]],"oldText":"  def start_or_refuse_new_game\n    if @game\n      refuse_new_game_start\n    else\n      start_new_game_and_redirect\n","newText":""}},{"type":"change","content":{"oldRange":[[56,0],[56,0]],"newRange":[[56,0],[59,0]],"oldText":"","newText":"  def datetime\n    # 11:07AM on Sunday, November 1, 2015\n    Time.now.strftime('%l:%M%p on %A, %B %e, %Y')\n"}},{"type":"change","content":{"oldRange":[[59,0],[63,0]],"newRange":[[59,0],[59,0]],"oldText":"  def store_guess_and_redirect\n    @game.store_guess(@parser.guess)\n    @status_code = '301 MOVED PERMANENTLY'\n    @responses.root\n","newText":""}},{"type":"change","content":{"oldRange":[[61,0],[61,0]],"newRange":[[61,0],[67,0]],"oldText":"","newText":"  def word_response(word)\n    if word?(word)\n      \"#{word} is a known word\"\n    else\n      \"#{word} is not a known word\"\n    end\n"}},{"type":"change","content":{"oldRange":[[67,0],[70,0]],"newRange":[[67,0],[67,0]],"oldText":"  def refuse_new_game_start\n    @status_code = '403 FORBIDDEN'\n    @responses.game_in_progress\n","newText":""}},{"type":"change","content":{"oldRange":[[69,0],[69,0]],"newRange":[[69,0],[71,0]],"oldText":"","newText":"  def verb(request)\n    request.first.split[0]\n"}},{"type":"change","content":{"oldRange":[[71,0],[74,0]],"newRange":[[71,0],[71,0]],"oldText":"  def no_game_started\n    @status_code = '403 FORBIDDEN'\n    @responses.no_game_started\n","newText":""}},{"type":"change","content":{"oldRange":[[73,0],[73,0]],"newRange":[[73,0],[75,0]],"oldText":"","newText":"  def path(request)\n    request.first.split[1].split(\"?\")[0]\n"}},{"type":"change","content":{"oldRange":[[75,0],[79,0]],"newRange":[[75,0],[75,0]],"oldText":"  def start_new_game_and_redirect\n    @game = Game.new\n    @status_code = '301 MOVED PERMANENTLY'\n    @responses.good_luck\n","newText":""}},{"type":"change","content":{"oldRange":[[77,0],[77,0]],"newRange":[[77,0],[79,0]],"oldText":"","newText":"  def word(request)\n    request.first.split[1].split(\"?\")[1].split(\"=\")[1]\n"}},{"type":"change","content":{"oldRange":[[79,0],[90,0]],"newRange":[[79,0],[79,0]],"oldText":"  def get_responses(i)\n    case @parser.path\n    when '/'            then @responses.root\n    when '/hello'       then @responses.hello_world(i)\n    when '/datetime'    then @responses.datetime\n    when '/shutdown'    then @responses.shutdown(i)\n    when '/word_search' then check_for_json_request\n    when '/game'        then get_game_status_for_current_game\n    when '/force_error' then force_error_status_and_response\n    else                     @status_code = '404 NOT FOUND'\n    end\n","newText":""}},{"type":"change","content":{"oldRange":[[81,0],[81,0]],"newRange":[[81,0],[86,0]],"oldText":"","newText":"  def word?(word)\n    begin\n      @complete_me.center.search(word).valid_word\n    rescue\n      false\n"}},{"type":"change","content":{"oldRange":[[86,0],[91,0]],"newRange":[[86,0],[86,0]],"oldText":"  def get_game_status_for_current_game\n    if @game\n      @responses.game(@parser.word, @game)\n    else\n      no_game_started\n","newText":""}},{"type":"change","content":{"oldRange":[[89,0],[89,0]],"newRange":[[89,0],[91,0]],"oldText":"","newText":"  def protocol(request)\n    request.first.split[2]\n"}},{"type":"change","content":{"oldRange":[[91,0],[97,0]],"newRange":[[91,0],[91,0]],"oldText":"  def check_for_json_request\n    if @parser.accept.start_with?('application/json')\n      @responses.word_suggest(@parser.word)\n    else\n      @responses.word_search(@parser.word)\n    end\n","newText":""}},{"type":"change","content":{"oldRange":[[93,0],[93,0]],"newRange":[[93,0],[95,0]],"oldText":"","newText":"  def host(request)\n    request[1].split[1].split(\":\")[0]\n"}},{"type":"change","content":{"oldRange":[[95,0],[98,0]],"newRange":[[95,0],[95,0]],"oldText":"  def force_error_status_and_response\n    @status_code = '500 INTERNAL SERVER ERROR'\n    @responses.system_error\n","newText":""}},{"type":"change","content":{"oldRange":[[97,0],[97,0]],"newRange":[[97,0],[99,0]],"oldText":"","newText":"  def port(request)\n    request[1].split[1].split(\":\")[1]\n"}},{"type":"change","content":{"oldRange":[[99,0],[101,0]],"newRange":[[99,0],[99,0]],"oldText":"  def generate_headers(length)\n    @header_generator.headers(length, @status_code)\n","newText":""}},{"type":"change","content":{"oldRange":[[100,0],[100,0]],"newRange":[[100,0],[104,0]],"oldText":"","newText":"\n  def accept(request)\n    request[4]\n  end\n"}},{"type":"group-end","snapshot":{"0":{"range":[[54,5],[54,5]],"properties":{"type":"selection","editorId":332,"goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[46,6],[46,36]],"properties":{"type":"selection","editorId":332,"goalScreenRange":null,"autoscroll":false},"reversed":true,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[0,0],[0,0]],"newRange":[[0,0],[5,0]],"oldText":"","newText":"require_relative 'html_generator'\nrequire_relative 'header_generator'\nrequire_relative 'request_parser'\nrequire_relative 'responses'\nrequire_relative 'game'\n"}},{"type":"change","content":{"oldRange":[[5,0],[7,0]],"newRange":[[5,0],[5,0]],"oldText":"require 'pry'\nrequire '../complete_me/lib/complete_me'\n","newText":""}},{"type":"change","content":{"oldRange":[[8,0],[8,0]],"newRange":[[8,0],[11,0]],"oldText":"","newText":"    @html_generator = HtmlGenerator.new\n    @responses = Responses.new\n    @header_generator = HeaderGenerator.new\n"}},{"type":"change","content":{"oldRange":[[11,0],[14,0]],"newRange":[[11,0],[11,0]],"oldText":"    @complete_me = CompleteMe.new\n    dictionary = ['pizza']\n    @complete_me.populate(dictionary)\n","newText":""}},{"type":"change","content":{"oldRange":[[13,0],[13,0]],"newRange":[[13,0],[16,0]],"oldText":"","newText":"  def generate_response(i, request)\n    @status_code = '200 OK'\n    @parser = RequestParser.new(request)\n"}},{"type":"change","content":{"oldRange":[[16,0],[19,0]],"newRange":[[16,0],[16,0]],"oldText":"  def hello_world(i)\n    \"Hello, World (#{i})\"\n  end\n","newText":""}},{"type":"change","content":{"oldRange":[[17,0],[17,0]],"newRange":[[17,0],[19,0]],"oldText":"","newText":"    if @parser.verb == 'GET'\n      response = get_responses(i)\n"}},{"type":"change","content":{"oldRange":[[19,0],[34,0]],"newRange":[[19,0],[19,0]],"oldText":"  def convert_request_to_html(request)\n    data = [\"Verb: #{verb(request)}\", \"Path: #{path(request)}\",\n            \"Protocol: #{protocol(request)}\", \"Host: #{host(request)}\",\n            \"Port: #{port(request)}\", \"Origin: #{host(request)}\", \"#{accept(request)}\"]\n    create_html_string(data)\n  end\n\n  def create_html_string(data)\n    \"<pre>\\n#{data.join(\"\\n\")}\\n</pre>\"\n  end\n\n  def generate_response(i, request)\n    # binding.pry\n    if verb(request) == 'GET'\n      get_responses(i, request)\n","newText":""}},{"type":"change","content":{"oldRange":[[20,0],[20,0]],"newRange":[[20,0],[21,0]],"oldText":"","newText":"      response = post_responses\n"}},{"type":"change","content":{"oldRange":[[21,0],[22,0]],"newRange":[[21,0],[21,0]],"oldText":"      post_responses(i, request)\n","newText":""}},{"type":"change","content":{"oldRange":[[22,0],[22,0]],"newRange":[[22,0],[24,0]],"oldText":"","newText":"\n    @html_generator.generate(response, @parser.diagnostics)\n"}},{"type":"change","content":{"oldRange":[[26,0],[26,0]],"newRange":[[26,0],[28,0]],"oldText":"","newText":"  def post_responses\n    case @parser.path\n"}},{"type":"change","content":{"oldRange":[[28,0],[30,0]],"newRange":[[28,0],[28,0]],"oldText":"  def post_responses(i, request)\n    case path(request)\n","newText":""}},{"type":"change","content":{"oldRange":[[29,0],[29,0]],"newRange":[[29,0],[32,0]],"oldText":"","newText":"      start_or_refuse_new_game\n    when '/game'\n      check_for_current_game\n"}},{"type":"change","content":{"oldRange":[[32,0],[33,0]],"newRange":[[32,0],[32,0]],"oldText":"      \"Good luck!\" + \"\\n\" + convert_request_to_html(request)\n","newText":""}},{"type":"change","content":{"oldRange":[[35,0],[35,0]],"newRange":[[35,0],[40,0]],"oldText":"","newText":"  def check_for_current_game\n    if @game\n      store_guess_and_redirect\n    else\n      no_game_started\n"}},{"type":"change","content":{"oldRange":[[40,0],[52,0]],"newRange":[[40,0],[40,0]],"oldText":"  def get_responses(i, request)\n    case path(request)\n    when '/'\n      convert_request_to_html(request)\n    when '/hello'\n      hello_world(i) + \"\\n\" + convert_request_to_html(request)\n    when '/datetime'\n      datetime + \"\\n\" + convert_request_to_html(request)\n    when '/shutdown'\n      \"Total Requests: #{i}\" + \"\\n\" + convert_request_to_html(request)\n    when '/word_search'\n      word_response(word(request)) + \"\\n\" + convert_request_to_html(request)\n","newText":""}},{"type":"change","content":{"oldRange":[[43,0],[43,0]],"newRange":[[43,0],[46,0]],"oldText":"","newText":"  def start_or_refuse_new_game\n    if @game\n      refuse_new_game_start\n"}},{"type":"change","content":{"oldRange":[[46,0],[54,0]],"newRange":[[46,0],[46,0]],"oldText":"  def datetime\n    # 11:07AM on Sunday, November 1, 2015\n    Time.now.strftime('%l:%M%p on %A, %B %e, %Y')\n  end\n\n  def word_response(word)\n    if word?(word)\n      \"#{word} is a known word\"\n","newText":""}},{"type":"change","content":{"oldRange":[[47,0],[47,0]],"newRange":[[47,0],[48,0]],"oldText":"","newText":"      start_new_game_and_redirect\n"}},{"type":"change","content":{"oldRange":[[48,0],[49,0]],"newRange":[[48,0],[48,0]],"oldText":"      \"#{word} is not a known word\"\n","newText":""}},{"type":"change","content":{"oldRange":[[51,0],[51,0]],"newRange":[[51,0],[55,0]],"oldText":"","newText":"  def store_guess_and_redirect\n    @game.store_guess(@parser.guess)\n    @status_code = '301 MOVED PERMANENTLY'\n    @responses.root\n"}},{"type":"change","content":{"oldRange":[[55,0],[57,0]],"newRange":[[55,0],[55,0]],"oldText":"  def verb(request)\n    request.first.split[0]\n","newText":""}},{"type":"change","content":{"oldRange":[[57,0],[57,0]],"newRange":[[57,0],[60,0]],"oldText":"","newText":"  def refuse_new_game_start\n    @status_code = '403 FORBIDDEN'\n    @responses.game_in_progress\n"}},{"type":"change","content":{"oldRange":[[60,0],[62,0]],"newRange":[[60,0],[60,0]],"oldText":"  def path(request)\n    request.first.split[1].split(\"?\")[0]\n","newText":""}},{"type":"change","content":{"oldRange":[[62,0],[62,0]],"newRange":[[62,0],[65,0]],"oldText":"","newText":"  def no_game_started\n    @status_code = '403 FORBIDDEN'\n    @responses.no_game_started\n"}},{"type":"change","content":{"oldRange":[[65,0],[67,0]],"newRange":[[65,0],[65,0]],"oldText":"  def word(request)\n    request.first.split[1].split(\"?\")[1].split(\"=\")[1]\n","newText":""}},{"type":"change","content":{"oldRange":[[67,0],[67,0]],"newRange":[[67,0],[83,0]],"oldText":"","newText":"  def start_new_game_and_redirect\n    @game = Game.new\n    @status_code = '301 MOVED PERMANENTLY'\n    @responses.good_luck\n  end\n\n  def get_responses(i)\n    case @parser.path\n    when '/'            then @responses.root\n    when '/hello'       then @responses.hello_world(i)\n    when '/datetime'    then @responses.datetime\n    when '/shutdown'    then @responses.shutdown(i)\n    when '/word_search' then check_for_json_request\n    when '/game'        then get_game_status_for_current_game\n    when '/force_error' then force_error_status_and_response\n    else                     @status_code = '404 NOT FOUND'\n"}},{"type":"change","content":{"oldRange":[[83,0],[88,0]],"newRange":[[83,0],[83,0]],"oldText":"  def word?(word)\n    begin\n      @complete_me.center.search(word).valid_word\n    rescue\n      false\n","newText":""}},{"type":"change","content":{"oldRange":[[86,0],[86,0]],"newRange":[[86,0],[92,0]],"oldText":"","newText":"  def get_game_status_for_current_game\n    if @game\n      @responses.game(@parser.word, @game)\n    else\n      no_game_started\n    end\n"}},{"type":"change","content":{"oldRange":[[92,0],[94,0]],"newRange":[[92,0],[92,0]],"oldText":"  def protocol(request)\n    request.first.split[2]\n","newText":""}},{"type":"change","content":{"oldRange":[[94,0],[94,0]],"newRange":[[94,0],[100,0]],"oldText":"","newText":"  def check_for_json_request\n    if @parser.accept.start_with?('application/json')\n      @responses.word_suggest(@parser.word)\n    else\n      @responses.word_search(@parser.word)\n    end\n"}},{"type":"change","content":{"oldRange":[[100,0],[102,0]],"newRange":[[100,0],[100,0]],"oldText":"  def host(request)\n    request[1].split[1].split(\":\")[0]\n","newText":""}},{"type":"change","content":{"oldRange":[[102,0],[102,0]],"newRange":[[102,0],[105,0]],"oldText":"","newText":"  def force_error_status_and_response\n    @status_code = '500 INTERNAL SERVER ERROR'\n    @responses.system_error\n"}},{"type":"change","content":{"oldRange":[[105,0],[107,0]],"newRange":[[105,0],[105,0]],"oldText":"  def port(request)\n    request[1].split[1].split(\":\")[1]\n","newText":""}},{"type":"change","content":{"oldRange":[[107,0],[107,0]],"newRange":[[107,0],[109,0]],"oldText":"","newText":"  def generate_headers(length)\n    @header_generator.headers(length, @status_code)\n"}},{"type":"change","content":{"oldRange":[[109,0],[111,0]],"newRange":[[109,0],[109,0]],"oldText":"  def accept(request)\n    request[4]\n","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[40,0],[40,0]],"properties":{"type":"selection","editorId":332,"goalScreenRange":null,"autoscroll":false},"reversed":true,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[46,6],[46,6]],"properties":{"type":"selection","editorId":332,"goalScreenRange":null,"autoscroll":false},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[28,0],[28,0]],"newRange":[[28,0],[30,0]],"oldText":"","newText":"    when '/start_game' then start_or_refuse_new_game\n    when '/game'       then check_for_current_game\n"}},{"type":"change","content":{"oldRange":[[30,0],[34,0]],"newRange":[[30,0],[30,0]],"oldText":"    when '/start_game'\n      start_or_refuse_new_game\n    when '/game'\n      check_for_current_game\n","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[44,6],[44,6]],"properties":{"type":"selection","editorId":332,"goalScreenRange":null,"autoscroll":false},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}}],"redoStack":[]},"encoding":"utf8","filePath":"/Users/hectorhuertas/turing/1module/projects/http_yeah_you_know_me/lib/app.rb","digestWhenLastPersisted":"8113e0db764a98be7b63e50a94405e97aa637d94","preferredLineEnding":null,"deserializer":"TextBuffer","version":2},{"text":"require 'socket'\nrequire_relative 'app'\n\nclass ClientHandler\n  attr_reader :server, :client\n\n  def initialize(port = 9292)\n    @server = TCPServer.open(port)\n  end\n\n  def get_request\n    @client = server.accept\n    request = []\n\n    move_headers_into(request)\n    move_body_into(request) if content_is_set_on(request)\n\n    return request\n  end\n\n  def move_headers_into(request)\n    move_next_block_of_lines_into(request)\n  end\n\n  def move_body_into(request)\n    move_next_block_of_lines_into(request)\n    request << client.gets\n  end\n\n  def move_next_block_of_lines_into(request)\n    while line = client.gets and !line.chomp.empty?\n      request << line.chomp\n    end\n  end\n\n  def content_is_set_on(request)\n    request.join.include?('Content-Type')\n  end\n\n  def post_response(headers, response)\n    client.puts headers\n    client.puts response\n    client.close\n  end\nend\n","markerStore":{"nextMarkerId":6,"markersById":{"0":{"range":{"start":{"row":20,"column":24},"end":{"row":20,"column":24}},"properties":{"type":"selection","editorId":356,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"4":{"range":{"start":{"row":20,"column":23},"end":{"row":20,"column":24}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"5":{"range":{"start":{"row":20,"column":31},"end":{"row":20,"column":32}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false}},"version":2},"history":{"version":3,"nextCheckpointId":4,"undoStack":[{"type":"group-start","snapshot":{"0":{"range":[[0,0],[0,0]],"properties":{"type":"selection","editorId":356},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[2,0],[3,0]],"newRange":[[2,0],[2,0]],"oldText":"require 'pry'\n","newText":""}},{"type":"change","content":{"oldRange":[[12,0],[12,0]],"newRange":[[12,0],[13,0]],"oldText":"","newText":"    request = []\n"}},{"type":"change","content":{"oldRange":[[14,0],[14,0]],"newRange":[[14,0],[30,0]],"oldText":"","newText":"    move_headers_into(request)\n    move_body_into(request) if content_is_set_on(request)\n\n    return request\n  end\n\n  def move_headers_into(request)\n    move_next_block_of_lines_into(request)\n  end\n\n  def move_body_into(request)\n    move_next_block_of_lines_into(request)\n    request << client.gets\n  end\n\n  def move_next_block_of_lines_into(request)\n"}},{"type":"change","content":{"oldRange":[[30,0],[31,0]],"newRange":[[30,0],[30,0]],"oldText":"    request_lines = []\n","newText":""}},{"type":"change","content":{"oldRange":[[31,0],[31,0]],"newRange":[[31,0],[32,0]],"oldText":"","newText":"      request << line.chomp\n"}},{"type":"change","content":{"oldRange":[[32,0],[33,0]],"newRange":[[32,0],[32,0]],"oldText":"      request_lines << line.chomp\n","newText":""}},{"type":"change","content":{"oldRange":[[33,0],[33,0]],"newRange":[[33,0],[34,0]],"oldText":"","newText":"  end\n"}},{"type":"change","content":{"oldRange":[[35,0],[35,0]],"newRange":[[35,0],[37,0]],"oldText":"","newText":"  def content_is_set_on(request)\n    request.join.include?('Content-Type')\n"}},{"type":"change","content":{"oldRange":[[37,0],[38,0]],"newRange":[[37,0],[37,0]],"oldText":"    request_lines\n","newText":""}},{"type":"change","content":{"oldRange":[[39,0],[39,0]],"newRange":[[39,0],[41,0]],"oldText":"","newText":"  def post_response(headers, response)\n    client.puts headers\n"}},{"type":"change","content":{"oldRange":[[41,0],[42,0]],"newRange":[[41,0],[41,0]],"oldText":"  def post_response(response)\n","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[0,0],[0,0]],"properties":{"type":"selection","editorId":356},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[0,0],[0,0]],"properties":{"type":"selection","editorId":356,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[2,0],[2,0]],"newRange":[[2,0],[3,0]],"oldText":"","newText":"require 'pry'\n"}},{"type":"change","content":{"oldRange":[[13,0],[14,0]],"newRange":[[13,0],[13,0]],"oldText":"    request = []\n","newText":""}},{"type":"change","content":{"oldRange":[[14,0],[14,0]],"newRange":[[14,0],[15,0]],"oldText":"","newText":"    request_lines = []\n"}},{"type":"change","content":{"oldRange":[[15,0],[31,0]],"newRange":[[15,0],[15,0]],"oldText":"    move_headers_into(request)\n    move_body_into(request) if content_is_set_on(request)\n\n    return request\n  end\n\n  def move_headers_into(request)\n    move_next_block_of_lines_into(request)\n  end\n\n  def move_body_into(request)\n    move_next_block_of_lines_into(request)\n    request << client.gets\n  end\n\n  def move_next_block_of_lines_into(request)\n","newText":""}},{"type":"change","content":{"oldRange":[[16,0],[16,0]],"newRange":[[16,0],[17,0]],"oldText":"","newText":"      request_lines << line.chomp\n"}},{"type":"change","content":{"oldRange":[[17,0],[18,0]],"newRange":[[17,0],[17,0]],"oldText":"      request << line.chomp\n","newText":""}},{"type":"change","content":{"oldRange":[[18,0],[19,0]],"newRange":[[18,0],[18,0]],"oldText":"  end\n","newText":""}},{"type":"change","content":{"oldRange":[[19,0],[19,0]],"newRange":[[19,0],[20,0]],"oldText":"","newText":"    request_lines\n"}},{"type":"change","content":{"oldRange":[[20,0],[22,0]],"newRange":[[20,0],[20,0]],"oldText":"  def content_is_set_on(request)\n    request.join.include?('Content-Type')\n","newText":""}},{"type":"change","content":{"oldRange":[[22,0],[22,0]],"newRange":[[22,0],[23,0]],"oldText":"","newText":"  def post_response(response)\n"}},{"type":"change","content":{"oldRange":[[23,0],[25,0]],"newRange":[[23,0],[23,0]],"oldText":"  def post_response(headers, response)\n    client.puts headers\n","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[0,0],[0,0]],"properties":{"type":"selection","editorId":356,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[0,0],[0,0]],"properties":{"type":"selection","editorId":356,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[2,0],[3,0]],"newRange":[[2,0],[2,0]],"oldText":"require 'pry'\n","newText":""}},{"type":"change","content":{"oldRange":[[12,0],[12,0]],"newRange":[[12,0],[13,0]],"oldText":"","newText":"    request = []\n"}},{"type":"change","content":{"oldRange":[[14,0],[14,0]],"newRange":[[14,0],[30,0]],"oldText":"","newText":"    move_headers_into(request)\n    move_body_into(request) if content_is_set_on(request)\n\n    return request\n  end\n\n  def move_headers_into(request)\n    move_next_block_of_lines_into(request)\n  end\n\n  def move_body_into(request)\n    move_next_block_of_lines_into(request)\n    request << client.gets\n  end\n\n  def move_next_block_of_lines_into(request)\n"}},{"type":"change","content":{"oldRange":[[30,0],[31,0]],"newRange":[[30,0],[30,0]],"oldText":"    request_lines = []\n","newText":""}},{"type":"change","content":{"oldRange":[[31,0],[31,0]],"newRange":[[31,0],[32,0]],"oldText":"","newText":"      request << line.chomp\n"}},{"type":"change","content":{"oldRange":[[32,0],[33,0]],"newRange":[[32,0],[32,0]],"oldText":"      request_lines << line.chomp\n","newText":""}},{"type":"change","content":{"oldRange":[[33,0],[33,0]],"newRange":[[33,0],[34,0]],"oldText":"","newText":"  end\n"}},{"type":"change","content":{"oldRange":[[35,0],[35,0]],"newRange":[[35,0],[37,0]],"oldText":"","newText":"  def content_is_set_on(request)\n    request.join.include?('Content-Type')\n"}},{"type":"change","content":{"oldRange":[[37,0],[38,0]],"newRange":[[37,0],[37,0]],"oldText":"    request_lines\n","newText":""}},{"type":"change","content":{"oldRange":[[39,0],[39,0]],"newRange":[[39,0],[41,0]],"oldText":"","newText":"  def post_response(headers, response)\n    client.puts headers\n"}},{"type":"change","content":{"oldRange":[[41,0],[42,0]],"newRange":[[41,0],[41,0]],"oldText":"  def post_response(response)\n","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[0,0],[0,0]],"properties":{"type":"selection","editorId":356,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}}],"redoStack":[]},"encoding":"utf8","filePath":"/Users/hectorhuertas/turing/1module/projects/http_yeah_you_know_me/lib/client_handler.rb","digestWhenLastPersisted":"4b37ad0dd41a612980e6938b2e3fdbb9c55cc2fb","preferredLineEnding":null,"deserializer":"TextBuffer","version":2},{"text":"require_relative 'app'\nrequire_relative 'client_handler'\nrequire_relative 'header_generator'\n\nclient_handler = ClientHandler.new\napp = App.new\ni = 0\n\nloop do\n  request = client_handler.get_request\n\n  unless request.first.include?('favicon')\n    response = app.generate_response(i, request)\n    headers  = app.generate_headers(response.length)\n\n    client_handler.post_response(headers, response)\n\n    break if !response.nil? && response.include?('Total Requests:')\n\n    i += 1\n  end\nend\n\nputs 'Shutting down'\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":360,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":3,"nextCheckpointId":4,"undoStack":[{"type":"group-start","snapshot":{"0":{"range":[[0,0],[0,0]],"properties":{"type":"selection","editorId":360},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[2,0],[2,0]],"newRange":[[2,0],[3,0]],"oldText":"","newText":"require_relative 'header_generator'\n"}},{"type":"change","content":{"oldRange":[[10,0],[12,0]],"newRange":[[10,0],[10,0]],"oldText":"  response = app.generate_response(i, request)\n  client_handler.post_response(response)\n","newText":""}},{"type":"change","content":{"oldRange":[[11,0],[11,0]],"newRange":[[11,0],[20,0]],"oldText":"","newText":"  unless request.first.include?('favicon')\n    response = app.generate_response(i, request)\n    headers  = app.generate_headers(response.length)\n\n    client_handler.post_response(headers, response)\n\n    break if !response.nil? && response.include?('Total Requests:')\n\n    i += 1\n"}},{"type":"change","content":{"oldRange":[[20,0],[22,0]],"newRange":[[20,0],[20,0]],"oldText":"  if !response.nil? && response.include?(\"Total Requests:\")\n    break\n","newText":""}},{"type":"change","content":{"oldRange":[[21,0],[23,0]],"newRange":[[21,0],[21,0]],"oldText":"\n  i += 1 unless request.first.include?(\"favicon\")\n","newText":""}},{"type":"change","content":{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[24,0]],"oldText":"","newText":"puts 'Shutting down'\n"}},{"type":"change","content":{"oldRange":[[24,0],[25,0]],"newRange":[[24,0],[24,0]],"oldText":"puts \"Shutting down\"\n","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[0,0],[0,0]],"properties":{"type":"selection","editorId":360},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[0,0],[0,0]],"properties":{"type":"selection","editorId":360,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[2,0],[3,0]],"newRange":[[2,0],[2,0]],"oldText":"require_relative 'header_generator'\n","newText":""}},{"type":"change","content":{"oldRange":[[9,0],[9,0]],"newRange":[[9,0],[11,0]],"oldText":"","newText":"  response = app.generate_response(i, request)\n  client_handler.post_response(response)\n"}},{"type":"change","content":{"oldRange":[[12,0],[12,0]],"newRange":[[12,0],[15,0]],"oldText":"","newText":"  if !response.nil? && response.include?(\"Total Requests:\")\n    break\n  end\n"}},{"type":"change","content":{"oldRange":[[15,0],[18,0]],"newRange":[[15,0],[15,0]],"oldText":"  unless request.first.include?('favicon')\n    response = app.generate_response(i, request)\n    headers  = app.generate_headers(response.length)\n","newText":""}},{"type":"change","content":{"oldRange":[[16,0],[16,0]],"newRange":[[16,0],[17,0]],"oldText":"","newText":"  i += 1 unless request.first.include?(\"favicon\")\n"}},{"type":"change","content":{"oldRange":[[17,0],[23,0]],"newRange":[[17,0],[17,0]],"oldText":"    client_handler.post_response(headers, response)\n\n    break if !response.nil? && response.include?('Total Requests:')\n\n    i += 1\n  end\n","newText":""}},{"type":"change","content":{"oldRange":[[19,0],[19,0]],"newRange":[[19,0],[20,0]],"oldText":"","newText":"puts \"Shutting down\"\n"}},{"type":"change","content":{"oldRange":[[20,0],[21,0]],"newRange":[[20,0],[20,0]],"oldText":"puts 'Shutting down'\n","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[0,0],[0,0]],"properties":{"type":"selection","editorId":360,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[0,0],[0,0]],"properties":{"type":"selection","editorId":360,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[2,0],[2,0]],"newRange":[[2,0],[3,0]],"oldText":"","newText":"require_relative 'header_generator'\n"}},{"type":"change","content":{"oldRange":[[10,0],[12,0]],"newRange":[[10,0],[10,0]],"oldText":"  response = app.generate_response(i, request)\n  client_handler.post_response(response)\n","newText":""}},{"type":"change","content":{"oldRange":[[11,0],[11,0]],"newRange":[[11,0],[20,0]],"oldText":"","newText":"  unless request.first.include?('favicon')\n    response = app.generate_response(i, request)\n    headers  = app.generate_headers(response.length)\n\n    client_handler.post_response(headers, response)\n\n    break if !response.nil? && response.include?('Total Requests:')\n\n    i += 1\n"}},{"type":"change","content":{"oldRange":[[20,0],[22,0]],"newRange":[[20,0],[20,0]],"oldText":"  if !response.nil? && response.include?(\"Total Requests:\")\n    break\n","newText":""}},{"type":"change","content":{"oldRange":[[21,0],[23,0]],"newRange":[[21,0],[21,0]],"oldText":"\n  i += 1 unless request.first.include?(\"favicon\")\n","newText":""}},{"type":"change","content":{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[24,0]],"oldText":"","newText":"puts 'Shutting down'\n"}},{"type":"change","content":{"oldRange":[[24,0],[25,0]],"newRange":[[24,0],[24,0]],"oldText":"puts \"Shutting down\"\n","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[0,0],[0,0]],"properties":{"type":"selection","editorId":360,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}}],"redoStack":[]},"encoding":"utf8","filePath":"/Users/hectorhuertas/turing/1module/projects/http_yeah_you_know_me/lib/web_server.rb","digestWhenLastPersisted":"591287872ebbdae32e88ffd0bc244c9dbcc1ef28","preferredLineEnding":null,"deserializer":"TextBuffer","version":2},{"text":"require_relative 'complete_me'\n\nclass WordSearch\n  def initialize\n    @complete_me ||= CompleteMe.new\n    dictionary = File.read(\"/usr/share/dict/words\")\n    @complete_me.populate(dictionary)\n  end\n\n  def word?(word)\n    begin\n      @complete_me.center.search(word).valid_word\n    rescue\n      false\n    end\n  end\n\n  def suggest(word)\n    @complete_me.suggest(word)\n  end\nend\n","markerStore":{"nextMarkerId":2,"markersById":{"0":{"range":{"start":{"row":14,"column":7},"end":{"row":14,"column":7}},"properties":{"type":"selection","editorId":364,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"1":{"range":{"start":{"row":10,"column":4},"end":{"row":10,"column":9}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false}},"version":2},"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/hectorhuertas/turing/1module/projects/http_yeah_you_know_me/lib/word_search.rb","digestWhenLastPersisted":"b647dc6102bca43cbfb86d64eeb74c32240923ee","preferredLineEnding":null,"deserializer":"TextBuffer","version":2}]},"workspace":{"deserializer":"Workspace","paneContainer":{"deserializer":"PaneContainer","version":1,"root":{"deserializer":"Pane","id":3,"items":[{"deserializer":"TextEditor","id":332,"softTabs":true,"scrollRow":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":333,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/hectorhuertas/turing/1module/projects/http_yeah_you_know_me/lib/app.rb","largeFileMode":false},"largeFileMode":false}},{"deserializer":"TextEditor","id":364,"softTabs":true,"displayBuffer":{"deserializer":"DisplayBuffer","id":365,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/hectorhuertas/turing/1module/projects/http_yeah_you_know_me/lib/word_search.rb","largeFileMode":false},"largeFileMode":false}},{"deserializer":"TextEditor","id":356,"softTabs":true,"scrollRow":4,"displayBuffer":{"deserializer":"DisplayBuffer","id":357,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/hectorhuertas/turing/1module/projects/http_yeah_you_know_me/lib/client_handler.rb","largeFileMode":false},"largeFileMode":false}},{"deserializer":"TextEditor","id":360,"softTabs":true,"displayBuffer":{"deserializer":"DisplayBuffer","id":361,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/hectorhuertas/turing/1module/projects/http_yeah_you_know_me/lib/web_server.rb","largeFileMode":false},"largeFileMode":false}}],"activeItemURI":"/Users/hectorhuertas/turing/1module/projects/http_yeah_you_know_me/lib/word_search.rb","focused":true,"flexScale":1},"activePaneId":3},"fullScreen":false,"packagesWithActiveGrammars":["language-ruby","language-hyperlink","language-todo"]},"packageStates":{"fuzzy-finder":{"/Users/hectorhuertas/turing/1module/projects/http_yeah_you_know_me/lib/app.rb":1446755953139,"/Users/hectorhuertas/turing/1module/projects/http_yeah_you_know_me/lib/word_search.rb":1446756118817,"/Users/hectorhuertas/turing/1module/projects/http_yeah_you_know_me/lib/client_handler.rb":1446755890740,"/Users/hectorhuertas/turing/1module/projects/http_yeah_you_know_me/lib/web_server.rb":1446755331347},"metrics":{"sessionLength":5590565},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/Users/hectorhuertas/turing/1module/projects/http_yeah_you_know_me":{"isExpanded":true,"entries":{"lib":{"isExpanded":true,"entries":{}},"spec":{"isExpanded":true,"entries":{}}}}},"selectedPath":"/Users/hectorhuertas/turing/1module/projects/http_yeah_you_know_me/lib/word_search.rb","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200},"keybinding-resolver":{},"find-and-replace":{"findOptions":{"findPattern":"","replacePattern":"","pathsPattern":"","useRegex":false,"wholeWord":false,"caseSensitive":false,"inCurrentSelection":false},"findHistory":[],"replaceHistory":[],"pathsHistory":[]}}}